import{Router}from'express';import{saveSignal}from'../services/signalsService.js';import{saveDominance}from'../services/dominanceService.js';import{saveRaw}from'../services/rawService.js';import{parseSignal}from'../parseSignal.js';import{parseDominance}from'../parseDominance.js';import{logger}from'../logger.js';const r=Router();r.use((q,s,n)=>{if(q.query.token!==process.env.WEBHOOK_TOKEN){logger.warn('Token inválido',{token:q.query.token});return s.status(401).json({error:'Token inválido'});}n();});r.use(async(q,s,n)=>{try{await saveRaw(q.path,{...(q.query||{}),...(q.body||{})});}catch{};n();});r.get('/signal',async(q,s)=>{logger.info('GET /signal',{query:q.query});try{const sig=parseSignal(q.query);await saveSignal(sig);s.json({status:'ok'});}catch(e){logger.error('GET /signal error',e);s.status(500).json({error:'Erro GET'});}});r.post('/signal',async(q,s)=>{logger.info('POST /signal',{body:q.body});try{const sig=parseSignal(q.body);await saveSignal(sig);s.json({status:'ok'});}catch(e){logger.error('POST /signal error',e);s.status(500).json({error:'Erro POST'});}});r.post('/dominance',async(q,s)=>{logger.info('POST /dominance',{body:q.body});try{const dom=parseDominance(q.body);await saveDominance(dom);s.json({status:'ok'});}catch(e){logger.error('POST dominance error',e);s.status(500).json({error:'Erro dominance'});}});export default r;
